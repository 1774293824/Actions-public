name: 编译openwrt-6.x源码
on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: '此处输入release发行说明:'
        default: '用户未填写'

env:
  REPO_URL: https://github.com/King-Of-Knights/openwrt-6.x
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: 检出源码到workflows
      uses: actions/checkout@main
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo -e "$(nproc) 个线程编译"
        sudo docker image prune --all --force
        echo -e "已完成删除无用文件和docker镜像,运行df -Th 命令:"
        df -Th        
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq full-upgrade -y
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler ecj fakeroot fastjar flex gawk gettext genisoimage git gnutls-dev gperf haveged help2man intltool jq libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lrzsz msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2 libpython3-dev python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils quilt re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs unzip vim wget xmlto zlib1g-dev zstd xxd
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载自定义订阅源
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新feeds订阅源
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装feeds订阅源
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置的.sh文件
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载 dl 库
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j1

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) 线程编译"
        make -j$(nproc)
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        TZ="Asia/Shanghai" echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 检查磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 进入/bin/targets目录下,先删除packages文件夹,再将当前路径写入变量
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传/bin/targets目录中的产物至 Actions 下载页
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
